{
  "frontmatter": {
    "authors": [],
    "github": "https://github.com/alanlujan91/SequentialEGM",
    "keywords": [],
    "math": {
      "\\CARA": "\\alpha",
      "\\CRRA": "\\rho",
      "\\PtyLab": "\\mathrm{Z}",
      "\\ptyLab": "z",
      "\\TaxComb": "\\mathcal{T}",
      "\\Prob": "\\mathbb{P}",
      "\\DiePrb": "\\mathsf{D}",
      "\\diePrb": "\\mathsf{d}",
      "\\LivPrb": "\\cancel{\\DiePrb}",
      "\\livPrb": "\\cancel{\\diePrb}",
      "\\DiscFac": "\\beta",
      "\\DieFac": "\\pDead",
      "\\GroFac": "\\Omega",
      "\\BalGroFac": "\\check",
      "\\permGroFac": "\\Gamma",
      "\\PermGroFac": "\\pmb{\\Phi}",
      "\\PopnGroFac": "\\Xi",
      "\\APFac": "\\text{\\pmb{\\Thorn}}",
      "\\PopFac": "\\PopGro",
      "\\RPFac": "\\APFac_{\\Rfree}",
      "\\DeprFac": "\\daleth",
      "\\LivFac": "\\Alive",
      "\\aVec": "\\vec{\\mathrm{\\aNrm}}",
      "\\bVec": "\\vec{\\mathrm{\\bNrm}}",
      "\\cVec": "\\vec{\\mathrm{\\cNrm}}",
      "\\mVec": "\\vec{\\mathrm{\\mNrm}}",
      "\\yVec": "\\vec{\\mathrm{\\yNrm}}",
      "\\Inc": "Y",
      "\\inc": "y",
      "\\PInc": "P",
      "\\AFunc": "\\mathrm{A}",
      "\\aFunc": "\\mathrm{a}",
      "\\BFunc": "\\mathrm{B}",
      "\\bFunc": "\\mathrm{b}",
      "\\CFunc": "\\mathrm{C}",
      "\\cFunc": "\\mathrm{c}",
      "\\MPCFunc": "\\pmb{\\kappa}",
      "\\DFunc": "\\mathrm{D}",
      "\\dFunc": "\\mathrm{d}",
      "\\bEndFunc": "\\mathfrak{b}",
      "\\CEndFunc": "\\mathfrak{C}",
      "\\cEndFunc": "\\mathfrak{c}",
      "\\dEndFunc": "\\mathfrak{d}",
      "\\lEndFunc": "\\mathfrak{l}",
      "\\mEndFunc": "\\mathfrak{m}",
      "\\nEndFunc": "\\mathfrak{n}",
      "\\VEndFunc": "\\mathfrak{V}",
      "\\vEndFunc": "\\mathfrak{v}",
      "\\zEndFunc": "\\mathfrak{z}",
      "\\ProdFunc": "\\mathrm{F}",
      "\\prodFunc": "\\mathrm{f}",
      "\\EFunc": "\\mathrm{E}",
      "\\eFunc": "\\mathrm{e}",
      "\\FFunc": "\\mathrm{F}",
      "\\fFunc": "\\mathrm{f}",
      "\\GFunc": "\\mathrm{G}",
      "\\gFunc": "\\mathrm{g}",
      "\\vBegFunc": "\\pmb{\\upsilon}",
      "\\HFunc": "\\mathrm{H}",
      "\\hFunc": "\\mathrm{h}",
      "\\IFunc": "\\mathrm{I}",
      "\\iFunc": "\\mathrm{i}",
      "\\chiFunc": "\\pmb{\\chi}",
      "\\phiFunc": "\\digamma",
      "\\JFunc": "\\mathrm{J}",
      "\\jFunc": "\\mathrm{j}",
      "\\KFunc": "\\mathrm{K}",
      "\\kFunc": "\\mathrm{k}",
      "\\LFunc": "\\mathrm{L}",
      "\\utilFunc": "\\mathrm{u}",
      "\\MFunc": "\\mathrm{M}",
      "\\mFunc": "\\mathrm{m}",
      "\\NFunc": "\\mathrm{N}",
      "\\nFunc": "\\mathrm{n}",
      "\\OFunc": "\\mathrm{O}",
      "\\PFunc": "\\mathrm{P}",
      "\\pFunc": "\\mathrm{p}",
      "\\QFunc": "\\mathrm{Q}",
      "\\RFunc": "\\mathrm{R}",
      "\\rFunc": "\\mathrm{r}",
      "\\SFunc": "\\mathrm{S}",
      "\\sFunc": "\\mathrm{s}",
      "\\MPSFunc": "\\pmb{lambda}",
      "\\TFunc": "\\mathrm{T}",
      "\\UFunc": "\\mathrm{U}",
      "\\uFunc": "\\mathrm{u}",
      "\\VFunc": "\\mathrm{V}",
      "\\vFunc": "\\mathrm{v}",
      "\\cPDVFunc": "\\mathbb{C}",
      "\\pPDVFunc": "\\mathbb{P}",
      "\\uPDVFunc": "\\mathbb{U}",
      "\\cLevFunc": "\\pmb{\\cFunc}",
      "\\VLevFunc": "\\pmb{\\mathrm{V}}",
      "\\vLevFunc": "\\pmb{\\mathrm{v}}",
      "\\RevFunc": "\\pmb{\\Pi}",
      "\\revFunc": "\\pmb{\\pi}",
      "\\WFunc": "\\mathrm{W}",
      "\\wFunc": "\\mathrm{w}",
      "\\XFunc": "\\mathrm{X}",
      "\\xFunc": "\\mathrm{x}",
      "\\YFunc": "\\mathrm{Y}",
      "\\yFunc": "\\mathrm{y}",
      "\\ZFunc": "\\mathrm{Z}",
      "\\zFunc": "\\mathrm{z}",
      "\\MPC": "\\kappa",
      "\\PIHMPC": "\\varkappa",
      "\\MinMPC": "\\uline{\\kappa}",
      "\\MinMinMPC": "\\underline{\\kappa}",
      "\\MaxMinMPC": "\\hat{\\underline{\\kappa}}",
      "\\MaxMPC": "\\bar{\\kappa}",
      "\\MaxMaxMPC": "\\bar{\\bar{\\kappa}}",
      "\\itc": "\\zeta",
      "\\kPriceAfterITC": "\\mathscr{P}",
      "\\PostITC": "\\cancel{\\zeta}",
      "\\pDead": "\\mathfrak{D}",
      "\\TaxPaid": "T",
      "\\WMid": "\\BLev",
      "\\wMid": "\\bLev",
      "\\Wmid": "\\BRat",
      "\\wmid": "\\bRat",
      "\\Dvdnd": "\\mathbf{D}",
      "\\dvdnd": "d",
      "\\edvdnd": "\\grave{\\dvdnd}",
      "\\hEnd": "\\mathfrak{h}",
      "\\GovSpend": "X",
      "\\govSpend": "x",
      "\\xpend": "\\xi",
      "\\expend": "\\xi",
      "\\TEnd": "T",
      "\\VEnd": "\\mathfrak{V}",
      "\\vEnd": "\\mathfrak{v}",
      "\\WEnd": "\\ALev",
      "\\wEnd": "\\aLev",
      "\\Wend": "\\ARat",
      "\\wend": "\\aRat",
      "\\permGroFacInd": "\\pmb{\\phi}",
      "\\permShkInd": "\\psi",
      "\\tranShkInd": "\\theta",
      "\\permLvlInd": "\\mathrm{p}",
      "\\RCpnd": "\\mathbf{R}",
      "\\Mod": "\\tilde",
      "\\Rprod": "\\mathscr{R}",
      "\\rprod": "\\mathscr{r}",
      "\\RProd": "\\mathsf{R}",
      "\\rProd": "\\mathsf{r}",
      "\\tranShkIndStd": "\\sigma_{\\tranShkInd}",
      "\\tranShkAggStd": "\\sigma_{\\tranShkAgg}",
      "\\ShkMeanOneLogStd": "\\sigma_{\\ShkMeanOneLog}",
      "\\ShkLogZeroLogStd": "\\sigma_{\\cancel{\\ShkMeanOneLog}}",
      "\\PermShkStd": "\\sigma_{\\PermShk}",
      "\\TranShkStd": "\\sigma_{\\TranShk}",
      "\\prud": "\\eta",
      "\\tFwd": "n",
      "\\aE": "\\aRat^{e}",
      "\\BE": "\\BRat^{e}",
      "\\bE": "\\bRat^{e}",
      "\\CE": "\\CRat^{e}",
      "\\cE": "\\cRat^{e}",
      "\\Price": "\\mathsf{P}",
      "\\kPrice": "\\mathsf{P}",
      "\\Severance": "\\kappa",
      "\\MPCE": "\\MPC^{e}",
      "\\Rfree": "\\mathsf{R}",
      "\\rfree": "\\mathsf{r}",
      "\\TaxFree": "\\cancel{\\Tax}",
      "\\Age": "Z",
      "\\age": "z",
      "\\Wage": "\\mathsf{W}",
      "\\wage": "\\mathsf{w}",
      "\\bTargE": "\\check{b}^{e}",
      "\\CTargE": "\\CTarg^{\\null}",
      "\\cTargE": "\\Target{c}^{e}",
      "\\kTargE": "\\Target{k}^{e}",
      "\\STargE": "\\Target{\\SRat}^{\\null}",
      "\\sTargE": "\\Target{\\sRat}^{\\null}",
      "\\yTargE": "\\check{y}^{e}",
      "\\ME": "\\MRat^{e}",
      "\\mE": "\\mRat^{e}",
      "\\TermTime": "T",
      "\\ShkMeanOne": "\\Theta",
      "\\PopE": "\\mathcal{E}",
      "\\popE": "e",
      "\\labShare": "\\nu",
      "\\leiShare": "\\zeta",
      "\\kapShare": "\\alpha",
      "\\riskyshare": "\\varsigma",
      "\\Retire": "\\mathbb{R}",
      "\\WPre": "K",
      "\\wPre": "k",
      "\\Leisure": "Z",
      "\\leisure": "z",
      "\\SE": "\\SRat^{e}",
      "\\sE": "\\sRat^{e}",
      "\\BRatE": "B}^{e",
      "\\bRatE": "b}^{e",
      "\\CRatE": "\\CRat^{e}",
      "\\cRatE": "\\cRat^{e}",
      "\\DiscRate": "\\vartheta",
      "\\pDeadRate": "\\grave{\\cancel{\\mathsf{d}}}",
      "\\erate": "\\cancel{\\mho}",
      "\\pDieRate": "\\grave{\\mathsf{d}}",
      "\\timeRate": "\\vartheta",
      "\\saveRate": "\\grave{s}",
      "\\MRatE": "\\MRat^{e}",
      "\\mRatE": "\\mRat^{e}",
      "\\SRatE": "\\SRat^{e}",
      "\\sRatE": "\\sRat^{e}",
      "\\srate": "\\varsigma",
      "\\urate": "\\mho",
      "\\TaxRate": "t",
      "\\empState": "\\xi",
      "\\discRte": "\\tau",
      "\\DiscRte": "\\vartheta",
      "\\GroRte": "\\omega",
      "\\BalGroRte": "\\tilde",
      "\\permGroRte": "\\gamma",
      "\\PermGroRte": "\\varphi",
      "\\PopnGroRte": "\\xi",
      "\\APRte": "\\text{\\thorn}",
      "\\GPRte": "\\text{\\thorn}_{\\PermGroRte}",
      "\\popRte": "\\popGro",
      "\\RPRte": "\\text{\\thorn}_{\\rfree}",
      "\\deprRte": "\\delta",
      "\\Value": "\\mathrm{V}",
      "\\VE": "V}^{e",
      "\\vE": "v}^{e",
      "\\Save": "S",
      "\\save": "s",
      "\\RSave": "\\underline{\\Rfree}",
      "\\rsave": "\\underline{\\rfree}",
      "\\Abve": "\\bar",
      "\\BLevE": "\\BLev^{e}",
      "\\bLevE": "\\bLev^{e}",
      "\\CLevE": "\\CLev^{e}",
      "\\cLevE": "\\cLev^{e}",
      "\\mLevE": "\\mLev^{e}",
      "\\SLevE": "\\SLev^{e}",
      "\\sLevE": "\\sLev^{e}",
      "\\Alive": "\\mathcal{L}",
      "\\cFuncAbove": "\\bar{\\mathrm{c}}",
      "\\aRatBF": "\\pmb{a}",
      "\\bRatBF": "\\pmb{\\mathrm{b}}",
      "\\cRatBF": "\\pmb{c}",
      "\\mRatBF": "\\pmb{\\mathrm{m}}",
      "\\ALevBF": "\\mathbf{A}",
      "\\aLevBF": "\\mathbf{a}",
      "\\BLevBF": "\\mathbf{B}",
      "\\bLevBF": "\\mathbf{b}",
      "\\CLevBF": "\\mathbf{C}",
      "\\cLevBF": "\\mathbf{c}",
      "\\HLevBF": "\\mathbf{H}",
      "\\hLevBF": "\\mathbf{h}",
      "\\KLevBF": "\\mathbf{K}",
      "\\kLevBF": "\\mathbf{k}",
      "\\LLevBF": "\\mathbf{L}",
      "\\lLevBF": "\\pmb{\\ell}",
      "\\MLevBF": "\\mathbf{M}",
      "\\mLevBF": "\\mathbf{m}",
      "\\OLevBF": "\\mathbf{O}",
      "\\oLevBF": "\\mathbf{o}",
      "\\PLevBF": "\\mathbf{P}",
      "\\pLevBF": "\\mathbf{p}",
      "\\SLevBF": "\\mathbf{S}",
      "\\sLevBF": "\\mathbf{s}",
      "\\vLevBF": "\\mathbf{v}",
      "\\YLevBF": "\\mathbf{Y}",
      "\\yLevBF": "\\mathbf{y}",
      "\\ZLevBF": "\\mathbf{Z}",
      "\\zLevBF": "\\pmb{z}",
      "\\CDF": "\\mathcal{F}",
      "\\SDF": "\\MLev",
      "\\RfreeEff": "\\bar{\\Rfree}",
      "\\CGroPF": "\\Lambda",
      "\\cGroPF": "\\lambda",
      "\\WGroPF": "\\mathrm{G}",
      "\\MPCPPF": "\\Pi",
      "\\vBeg": "\\upsilon",
      "\\WBeg": "\\KLev",
      "\\wBeg": "\\kLev",
      "\\aAgg": "\\mathsf{A}",
      "\\cAgg": "\\pmb{C}",
      "\\permGroFacAgg": "\\Phi",
      "\\RfreeAgg": "\\Agg{\\Rfree}",
      "\\PermShkAgg": "\\Psi",
      "\\permShkAgg": "\\Psi",
      "\\TranShkAgg": "\\Theta",
      "\\tranShkAgg": "\\Theta",
      "\\permLvlAgg": "\\mathrm{P}",
      "\\PermLvlAgg": "\\PLvl",
      "\\zAgg": "\\pmb{Z}",
      "\\ShkMeanOneLog": "\\theta",
      "\\mBalLog": "\\BalGroRte{\\mNrm}",
      "\\EpremLog": "\\varphi",
      "\\ShkLogZeroLog": "\\cancel{\\ShkMeanOneLog}",
      "\\pLog": "p",
      "\\ImpG": "\\Im}_{\\PGro",
      "\\impg": "\\imath}_{\\pGro",
      "\\ATarg": "\\check{A}",
      "\\aTarg": "\\check{a}",
      "\\BTarg": "\\check{B}",
      "\\bTarg": "\\check{b}",
      "\\CTarg": "\\Target{C}",
      "\\cTarg": "\\Target{c}",
      "\\BTargTarg": "\\Target{\\Target{\\BRat}}",
      "\\bTargTarg": "\\Target{\\Target{\\bRat}}",
      "\\cTargTarg": "\\Target{\\Target{\\cRat}}",
      "\\STargTarg": "\\Target{\\Target{\\SRat}}",
      "\\sTargTarg": "\\Target{\\Target{\\sRat}}",
      "\\kTarg": "\\Target{k}",
      "\\mTarg": "\\check{m}",
      "\\STarg": "\\Target{\\SRat}",
      "\\sTarg": "\\Target{\\sRat}",
      "\\vTarg": "\\Target{\\vRat}",
      "\\yTarg": "\\check{y}",
      "\\CGroOverG": "\\Upsilon",
      "\\avg": "\\bar",
      "\\h": "h",
      "\\Wealth": "O",
      "\\wealth": "o",
      "\\Hi": "\\hat",
      "\\Chi": "\\mathrm{X}",
      "\\NI": "Z",
      "\\TaxUI": "\\tau",
      "\\adj": "\\mathrm{j}",
      "\\PermGroFacAdj": "\\underline{\\PermGroFac}",
      "\\PGroAdj": "\\underline{\\PGro}",
      "\\pGroAdj": "\\underline{\\pGro}",
      "\\PatPGroAdj": "\\text{\\pmb{\\Thorn}}_{\\underline{\\PGro}}",
      "\\patpGroAdj": "\\text{\\thorn}_{\\underline{\\pGro}}",
      "\\PermGroFacuAdj": "\\underline{\\underline{\\PermGroFac}}",
      "\\PGrouAdj": "\\underline{\\underline{\\PGro}}",
      "\\pGrouAdj": "\\underline{\\underline{\\pGro}}",
      "\\DiscAltuAdj": "\\underline{\\underline{\\beth}}",
      "\\TEndBak": "\\mathsf{p}",
      "\\tBak": "\\pmb{n}",
      "\\TEatBak": "\\mathtt{q}",
      "\\ek": "\\lambda",
      "\\Shk": "\\Phi",
      "\\shk": "\\phi",
      "\\PermShk": "\\mathbf{\\Psi}",
      "\\permShk": "\\psi",
      "\\uInvEuPermShk": "\\underline{\\underline{\\PermShk}}",
      "\\TranShk": "\\pmb{\\xi}",
      "\\PShk": "\\Psi",
      "\\pShk": "\\psi",
      "\\pshk": "\\psi",
      "\\TShk": "\\Xi",
      "\\tShk": "\\xi",
      "\\tshk": "\\xi",
      "\\Work": "\\mathbb{W}",
      "\\vk": "\\lambda",
      "\\util": "u",
      "\\TranShkAll": "\\pmb{\\xi}",
      "\\tShkAll": "\\xi",
      "\\WAll": "O",
      "\\wAll": "o",
      "\\Lvl": "\\mathbf",
      "\\ALvl": "\\mathbf{A}",
      "\\aLvl": "\\mathbf{a}",
      "\\BLvl": "\\mathbf{B}",
      "\\bLvl": "\\mathbf{b}",
      "\\CLvl": "\\mathbf{C}",
      "\\cLvl": "\\mathbf{c}",
      "\\DLvl": "\\mathbf{D}",
      "\\dLvl": "\\mathbf{d}",
      "\\ELvl": "\\mathbf{E}",
      "\\eLvl": "\\mathbf{e}",
      "\\FLvl": "\\mathbf{F}",
      "\\fLvl": "\\mathbf{f}",
      "\\GLvl": "\\mathbf{G}",
      "\\HLvl": "\\mathbf{H}",
      "\\hLvl": "\\mathbf{h}",
      "\\ILvl": "\\mathbf{I}",
      "\\iLvl": "\\mathbf{i}",
      "\\JLvl": "\\mathbf{J}",
      "\\jLvl": "\\mathbf{j}",
      "\\KLvl": "\\mathbf{K}",
      "\\kLvl": "\\mathbf{k}",
      "\\LLvl": "\\mathbf{L}",
      "\\ABalLvl": "\\BalGroFac{\\ALvl}",
      "\\MBalLvl": "\\BalGroFac{\\MNrm}",
      "\\mBalLvl": "\\BalGroFac{\\mNrm}",
      "\\MLvl": "\\mathbf{M}",
      "\\mLvl": "\\mathbf{m}",
      "\\PermLvl": "\\pLvl",
      "\\NLvl": "\\mathbf{N}",
      "\\PopnLvl": "\\pmb{\\mathrm{N}}",
      "\\OLvl": "\\mathbf{O}",
      "\\PLvl": "\\mathbf{P}",
      "\\pLvl": "\\mathbf{p}",
      "\\QLvl": "\\mathbf{Q}",
      "\\RLvl": "\\mathbf{R}",
      "\\rLvl": "\\mathbf{r}",
      "\\SLvl": "\\mathbf{S}",
      "\\sLvl": "\\mathbf{s}",
      "\\TLvl": "\\mathbf{T}",
      "\\ULvl": "\\mathbf{U}",
      "\\VLvl": "\\mathbf{V}",
      "\\vLvl": "\\mathbf{v}",
      "\\WLvl": "\\mathbf{W}",
      "\\XLvl": "\\mathbf{X}",
      "\\YLvl": "\\mathbf{Y}",
      "\\yLvl": "\\mathbf{y}",
      "\\ZLvl": "\\mathbf{Z}",
      "\\zLvl": "\\mathbf{z}",
      "\\Ham": "\\mathcal{H}",
      "\\EPrem": "\\Phi",
      "\\eprem": "\\varphi",
      "\\tHorOfm": "\\pmb{n}",
      "\\debtLim": "\\mathsf{d}",
      "\\tTerm": "T",
      "\\vFirm": "\\mathrm{e}",
      "\\ANrm": "A",
      "\\aNrm": "a",
      "\\BNrm": "B",
      "\\bNrm": "b",
      "\\CNrm": "C",
      "\\cNrm": "c",
      "\\GPFacNrm": "\\APFac_{\\PermGroFacAdj}",
      "\\DNrm": "D",
      "\\dNrm": "d",
      "\\ENrm": "E",
      "\\eNrm": "e",
      "\\FNrm": "F",
      "\\fNrm": "f",
      "\\bTrgNrm": "\\TargetNrm{\\bNrm}",
      "\\mTrgNrm": "\\TargetNrm{\\mNrm}",
      "\\HNrm": "H",
      "\\hNrm": "h",
      "\\INrm": "I",
      "\\iNrm": "i",
      "\\JNrm": "J",
      "\\jNrm": "j",
      "\\KNrm": "K",
      "\\kNrm": "k",
      "\\MNrm": "M",
      "\\mNrm": "m",
      "\\PNrm": "P",
      "\\pNrm": "p",
      "\\RNrm": "\\mathcal{R}",
      "\\rNrm": "s",
      "\\SNrm": "S",
      "\\sNrm": "s",
      "\\TargetNrm": "\\hat",
      "\\VNrm": "V",
      "\\vNrm": "v",
      "\\xNrm": "x",
      "\\YNrm": "Y",
      "\\yNrm": "y",
      "\\ZNrm": "Z",
      "\\zNrm": "z",
      "\\Rnorm": "\\mathcal{R}",
      "\\rnorm": "\\mathit{r}",
      "\\vNorm": "\\mathrm{w}",
      "\\WHum": "\\HLev",
      "\\wHum": "\\hLev",
      "\\Whum": "\\HRat",
      "\\whum": "\\hRat",
      "\\Num": "N",
      "\\VNum": "V",
      "\\vNum": "v",
      "\\Mean": "\\mathbb{M}",
      "\\tThen": "\\tau",
      "\\valfn": "\\mathrm{v}",
      "\\aMin": "\\underline{\\aRat}",
      "\\bMin": "\\underline{\\bRat}",
      "\\MPCmin": "\\uline{\\kappa}",
      "\\hEndMin": "\\underline{\\mathfrak{h}}",
      "\\aboveMin": "\\blacktriangle",
      "\\hMin": "\\underline{\\h}",
      "\\HMin": "\\underline{H}",
      "\\pShkMin": "\\underline{\\psi}",
      "\\whumMin": "\\underline{\\hRat}",
      "\\MPCminmin": "\\underline{\\kappa}",
      "\\TranShkEmpMin": "\\underline{\\TranShkEmp}",
      "\\tShkEmpMin": "\\underline{\\theta}",
      "\\MPSmin": "\\pZero^{1/\\CRRA} \\RPFac",
      "\\MPCmaxmin": "\\hat{\\underline{\\kappa}}",
      "\\Decision": "\\mathbb{D}",
      "\\SeveranceRatio": "\\varsigma",
      "\\Lo": "\\check",
      "\\ShkLogZero": "\\cancel{\\ShkMeanOne}",
      "\\pZero": "\\wp",
      "\\pNotZero": "(1-\\pZero)",
      "\\LGro": "\\Lambda",
      "\\lGro": "\\lambda",
      "\\PGro": "\\Gamma",
      "\\pGro": "\\gamma",
      "\\GDPGro": "\\gimel",
      "\\EmpGro": "\\Xi",
      "\\empGro": "\\xi",
      "\\PopGro": "\\Xi",
      "\\popGro": "\\xi",
      "\\PatPGro": "\\text{\\pmb{\\Thorn}}_{\\PGro}",
      "\\patpGro": "\\text{\\thorn}_{\\pGro}",
      "\\XperGro": "\\mathsf{X}",
      "\\xperGro": "\\mathsf{x}",
      "\\DivGro": "\\mathrm{G}",
      "\\divGro": "\\mathsf{g}",
      "\\WGro": "\\mathrm{G}",
      "\\wGro": "\\mathsf{g}",
      "\\RnormWGro": "\\mathcal{R}_{\\WGro}",
      "\\rnormwGro": "\\mathit{r}_{\\wGro}",
      "\\PatWGro": "\\text{\\pmb{\\Thorn}}_{\\WGro}",
      "\\patwGro": "\\text{\\thorn}_{\\wGro}",
      "\\PtyGro": "\\Phi",
      "\\ptyGro": "\\phi",
      "\\RBoro": "\\bar{\\Rfree}",
      "\\rboro": "\\bar{\\rfree}",
      "\\Pareto": "\\zeta",
      "\\Kap": "K",
      "\\kap": "k",
      "\\EEndMap": "\\mathsf{E}",
      "\\TMap": "\\mathscr{T}",
      "\\cP": "\\cons^{\\prime}",
      "\\MPCP": "\\pi",
      "\\taxDep": "\\partial",
      "\\FP": "\\mathrm{F}^{\\prime}",
      "\\fP": "\\mathrm{f}^{\\prime}",
      "\\TranShkEmp": "\\pmb{\\theta}",
      "\\TShkEmp": "\\Theta",
      "\\tShkEmp": "\\theta",
      "\\IncUnemp": "\\mu",
      "\\Pop": "L",
      "\\cPP": "\\cons^{\\prime\\prime}",
      "\\FPP": "\\mathrm{F}^{\\prime\\prime}",
      "\\fPP": "\\mathrm{f}^{\\prime\\prime}",
      "\\cPPP": "\\cons^{\\prime\\prime\\prime}",
      "\\uPPP": "\\mathrm{u}^{\\prime\\prime\\prime}",
      "\\uPP": "\\mathrm{u}^{\\prime\\prime}",
      "\\TaxCorp": "\\Large \\tau",
      "\\taxCorp": "\\tau",
      "\\uP": "\\mathrm{u}^{\\prime}",
      "\\q": "\\koppa",
      "\\adjPar": "\\omega",
      "\\tranShkIndVar": "\\sigma^{2}_{\\tranShkInd}",
      "\\tranShkAggVar": "\\sigma^{2}_{\\tranShkAgg}",
      "\\ShkMeanOneLogVar": "\\sigma^{2}_{\\ShkMeanOneLog}",
      "\\ShkLogZeroLogVar": "\\sigma_{\\cancel{\\ShkMeanOneLog}}^{2}",
      "\\PermShkVar": "\\sigma^{2}_{\\PermShk}",
      "\\TranShkVar": "\\sigma^{2}_{\\TranShk}",
      "\\sdr": "\\mRat",
      "\\Estdr": "\\sigma_{\\risky}",
      "\\xFer": "\\chi",
      "\\XFer": "X",
      "\\nIter": "n",
      "\\power": "\\eta",
      "\\labor": "\\ell",
      "\\Labor": "\\mathrm{L}",
      "\\PLabor": "P",
      "\\Plabor": "P",
      "\\tHor": "\\mathsf{n}",
      "\\error": "\\epsilon",
      "\\Depr": "\\daleth",
      "\\depr": "\\delta",
      "\\ImpR": "\\Im}_{\\Rfree",
      "\\impr": "\\imath}_{\\rfree",
      "\\EVarr": "\\sigma_{\\Risky}^{2}",
      "\\Evarr": "\\sigma_{\\risky}^{2}",
      "\\Err": "Z",
      "\\err": "z",
      "\\CGroOverR": "\\Phi",
      "\\corr": "\\varrho",
      "\\curr": "1",
      "\\Curr": "t",
      "\\tCurr": "t",
      "\\PatR": "\\text{\\pmb{\\Thorn}}_{\\Rfree}",
      "\\patr": "\\text{\\thorn}_{\\rfree}",
      "\\PDies": "\\mathsf{D}",
      "\\pDies": "\\mathsf{d}",
      "\\PLives": "\\cancel{\\PDies}",
      "\\pLives": "\\cancel{\\pDies}",
      "\\Stocks": "S",
      "\\stocks": "s",
      "\\TaxNetTrans": "Z",
      "\\taxNetTrans": "z",
      "\\unins": "\\zeta",
      "\\Cons": "C",
      "\\cons": "c",
      "\\MPS": "\\lambda",
      "\\MinMPS": "\\pZero^{1/\\CRRA} \\PatR",
      "\\MaxMPS": "\\PatR",
      "\\CGroPS": "\\chi",
      "\\Hours": "\\mathfrak{H}",
      "\\hours": "\\mathfrak{h}",
      "\\ASS": "A",
      "\\aSS": "a",
      "\\cEss": "c}^{e",
      "\\mEss": "\\check{m}^{e}",
      "\\vEss": "\\check{v}^{e}",
      "\\MSS": "\\breve{M}",
      "\\mSS": "\\breve{m}",
      "\\RGross": "\\breve{\\mathsf{R}}",
      "\\rGross": "\\breve{\\mathsf{r}}",
      "\\tSS": "t",
      "\\effUnits": "X",
      "\\Surplus": "Z",
      "\\surplus": "z",
      "\\TEat": "\\TEnd",
      "\\patpGrohat": "\\hat{\\text{\\thorn}}_{\\pGro}",
      "\\aMat": "[{\\mathrm{\\aNrm}}]",
      "\\bMat": "[{\\mathrm{\\bNrm}}]",
      "\\cMat": "[{\\mathrm{\\cNrm}}]",
      "\\tShkMat": "[{\\mathrm{\\tShkEmp}}]",
      "\\mMat": "[{\\mathrm{\\mNrm}}]",
      "\\xMat": "[{\\mathrm{\\xNrm}}]",
      "\\yMat": "[{\\mathrm{\\yNrm}}]",
      "\\Pat": "\\text{\\pmb{\\Thorn}}",
      "\\pat": "\\text{\\thorn}",
      "\\ARat": "A",
      "\\aRat": "a",
      "\\NFARat": "\\NRat",
      "\\BRat": "B",
      "\\bRat": "b",
      "\\CRat": "C",
      "\\cRat": "c",
      "\\ccRat": "\\mathsf{c}",
      "\\dRat": "d",
      "\\WEndRat": "\\ARat",
      "\\wEndRat": "\\aRat",
      "\\HRat": "H",
      "\\hRat": "h",
      "\\IRat": "I",
      "\\iRat": "i",
      "\\KRat": "K",
      "\\kRat": "k",
      "\\LRat": "L",
      "\\lRat": "l",
      "\\WAllRat": "O",
      "\\wAllRat": "o",
      "\\MRat": "M",
      "\\mRat": "m",
      "\\NRat": "N",
      "\\nRat": "n",
      "\\ORat": "O",
      "\\oRat": "o",
      "\\pRat": "p",
      "\\GDPRat": "P",
      "\\gdpRat": "p",
      "\\SRat": "S",
      "\\sRat": "s",
      "\\VRat": "V",
      "\\vRat": "v",
      "\\WRat": "O",
      "\\wRat": "o",
      "\\XRat": "X",
      "\\xRat": "x",
      "\\YRat": "Y",
      "\\yRat": "y",
      "\\ZRat": "Z",
      "\\zRat": "z",
      "\\Debt": "D",
      "\\debt": "d",
      "\\Target": "\\check",
      "\\WNet": "X",
      "\\wNet": "x",
      "\\straight": "\\Pi",
      "\\weight": "\\omega",
      "\\Habit": "H",
      "\\habit": "h",
      "\\WMkt": "\\MLev",
      "\\wMkt": "\\mLev",
      "\\wmkt": "\\mLev",
      "\\Alt": "\\grave",
      "\\DiscFacAlt": "\\beth",
      "\\DiscAlt": "\\beth",
      "\\ValAlt": "\\mathcal{V}",
      "\\vOptAlt": "\\Alt{\\tilde{\\mathfrak{v}}}",
      "\\RiskyAlt": "\\pmb{\\mathfrak{R}}",
      "\\riskyAlt": "\\pmb{\\mathfrak{r}}",
      "\\uPmt": "\\mu",
      "\\SeverancePayment": "\\mathcal{S}",
      "\\kapRent": "\\varkappa",
      "\\Discount": "\\beta",
      "\\tinyAmount": "\\epsilon",
      "\\WTot": "\\mathbf{O}",
      "\\wTot": "\\mathbf{o}",
      "\\Wtot": "O",
      "\\wtot": "o",
      "\\vOpt": "\\tilde{\\mathfrak{v}}",
      "\\Rport": "\\mathbb{R}",
      "\\rport": "\\mathbb{r}",
      "\\FDist": "\\mathcal{F}",
      "\\fDist": "\\mathcal{f}",
      "\\Next": "t+1",
      "\\tNext": "t+1",
      "\\BU": "B}^{u",
      "\\bU": "b}^{u",
      "\\CU": "\\CRat^{u}",
      "\\cU": "\\cRat^{u}",
      "\\MPCU": "\\MPC^{u}",
      "\\MU": "M}^{u",
      "\\mU": "m}^{u",
      "\\PopU": "\\mathcal{U}",
      "\\SU": "\\SRat^{u}",
      "\\sU": "\\sRat^{u}",
      "\\PatU": "\\text{\\pmb{\\Thorn}}_{\\urate}",
      "\\patu": "\\text{\\thorn}_{\\urate}",
      "\\bRatU": "b}^{u",
      "\\CRatU": "\\CRat^{u}",
      "\\cRatU": "\\cRat^{u}",
      "\\SRatU": "\\SRat^{u}",
      "\\sRatU": "\\sRat^{u}",
      "\\VU": "V}^{u",
      "\\vU": "v}^{u",
      "\\BLevU": "\\BLev^{u}",
      "\\bLevU": "\\bLev^{u}",
      "\\CLevU": "\\CLev^{u}",
      "\\cLevU": "\\cLev^{u}",
      "\\SLevU": "\\SLev^{u}",
      "\\sLevU": "\\sLev^{u}",
      "\\pSav": "\\phi",
      "\\PDV": "\\mathbb{P}",
      "\\CPDV": "\\text{PDV($C$)}",
      "\\PPDV": "\\text{PDV($P$)}",
      "\\ALev": "A",
      "\\aLev": "a",
      "\\NFALev": "\\NLev",
      "\\BLev": "B",
      "\\bLev": "b",
      "\\CLev": "C",
      "\\cLev": "c",
      "\\DLev": "D",
      "\\ELev": "E",
      "\\FLev": "F",
      "\\fLev": "f",
      "\\GLev": "G",
      "\\HLev": "\\pmb{H}",
      "\\hLev": "\\pmb{h}",
      "\\ILev": "I",
      "\\iLev": "i",
      "\\JLev": "J",
      "\\KLev": "K",
      "\\kLev": "k",
      "\\lLev": "\\ell",
      "\\LLev": "L",
      "\\WAllLev": "\\mathbf{O}",
      "\\wAllLev": "\\mathbf{o}",
      "\\MLev": "M",
      "\\mLev": "m",
      "\\NLev": "N",
      "\\nLev": "n",
      "\\oLev": "\\pmb{o}",
      "\\OLev": "O",
      "\\pLev": "\\pmb{p}",
      "\\PLev": "P",
      "\\GDPLev": "\\pmb{P}",
      "\\gdpLev": "\\pmb{p}",
      "\\PopLev": "\\pmb{N}",
      "\\QLev": "Q",
      "\\RLev": "R",
      "\\SLev": "S",
      "\\sLev": "s",
      "\\TLev": "T",
      "\\ULev": "U",
      "\\uLev": "u",
      "\\VLev": "V",
      "\\vLev": "v",
      "\\wLev": "\\pmb{w}",
      "\\WLev": "W",
      "\\XLev": "X",
      "\\xLev": "x",
      "\\TaxLev": "T",
      "\\YLev": "Y",
      "\\yLev": "y",
      "\\PtyLev": "A",
      "\\ptyLev": "a",
      "\\ZLev": "Z",
      "\\zLev": "z",
      "\\Rev": "\\Pi",
      "\\rev": "\\pi",
      "\\tPrev": "t-1",
      "\\Div": "D",
      "\\DiscFacLiv": "\\underline{\\DiscFacRaw}",
      "\\Inv": "I",
      "\\inv": "i",
      "\\TaxCombInv": "\\mathcal{T}^{-1}",
      "\\EPermShkInv": "\\Ex[\\PermShk^{-1}]",
      "\\InvEPermShkInv": "\\underline{\\PermShk}",
      "\\EpShkInv": "\\Ex[\\pShk^{-1}]",
      "\\InvEpShkInv": "\\underline{\\psi}",
      "\\uInvEpShkuInv": "\\underline{\\underline{\\psi}}",
      "\\VInv": "\\Lambda",
      "\\vInv": "\\scriptstyle \\Lambda \\displaystyle",
      "\\cov": "\\textup{cov}",
      "\\DiscFacRaw": "\\beta",
      "\\GPFacRaw": "\\APFac_{\\PermGroFac}",
      "\\Belw": "\\ushort",
      "\\GovNW": "N",
      "\\govNW": "n",
      "\\cFuncBelow": "\\uline{\\mathrm{c}}",
      "\\tNow": "t",
      "\\cFuncMax": "\\bar{\\bar{\\mathrm{c}}}",
      "\\MPCmax": "\\bar{\\kappa}",
      "\\MPSmax": "\\RPFac",
      "\\MPCmaxmax": "\\bar{\\bar{\\kappa}}",
      "\\Tax": "\\tau",
      "\\tax": "\\tau",
      "\\Ex": "\\mathbb{E}",
      "\\prudEx": "\\omega",
      "\\Steady": "\\bar",
      "\\Risky": "\\mathbf{R}",
      "\\risky": "\\mathbf{r}",
      "\\Seniority": "\\mathsf{X}",
      "\\seniority": "\\mathsf{x}"
    },
    "exports": [
      {
        "format": "ipynb",
        "filename": "PensionContrib_baseline.ipynb",
        "url": "/PensionContrib_basel-5a4768bacd69054f58aae1a37610145b.ipynb"
      }
    ]
  },
  "kind": "Notebook",
  "file": "C:\\Users\\alujan\\GitHub\\alanlujan91\\SequentialEGM\\Code\\PensionContrib_baseline.ipynb",
  "sha256": "c369df18d42b5d0ed457e3b5b52c51329282f72e5274187a5aa70a14f73b99a7",
  "slug": "pensioncontrib-baseline",
  "mdast": {
    "type": "root",
    "children": [
      {
        "type": "block",
        "position": {
          "start": { "line": 0, "column": 0 },
          "end": { "line": 1, "column": 0 }
        },
        "children": [
          {
            "type": "code",
            "lang": "python",
            "value": "import matplotlib.pyplot as plt\nimport numpy as np\nfrom ConsPensionContribModel import PensionContribConsumerType, init_pension_contrib\n\nfigures_path = \"../Figures/\"",
            "position": {
              "start": { "line": 2, "column": 0 },
              "end": { "line": 9, "column": 0 }
            },
            "key": "RDPARbbOOm"
          }
        ],
        "data": {
          "collapsed": false,
          "jupyter": { "outputs_hidden": false },
          "pycharm": { "name": "#%%\n" }
        },
        "key": "N6jA2lksbN"
      },
      {
        "type": "block",
        "position": {
          "start": { "line": 10, "column": 0 },
          "end": { "line": 11, "column": 0 }
        },
        "children": [
          {
            "type": "code",
            "lang": "python",
            "value": "baseline_params = init_pension_contrib.copy()\nbaseline_params[\"mCount\"] = 100\nbaseline_params[\"mMax\"] = 10\nbaseline_params[\"mNestFac\"] = -1\n\nbaseline_params[\"nCount\"] = 100\n\n\nbaseline_params[\"nMax\"] = 12\nbaseline_params[\"nNestFac\"] = -1\n\nbaseline_params[\"lCount\"] = 100\nbaseline_params[\"lMax\"] = 9\nbaseline_params[\"lNestFac\"] = -1\n\nbaseline_params[\"b2Count\"] = 100\nbaseline_params[\"b2Max\"] = 13\nbaseline_params[\"b2NestFac\"] = -1\n\nbaseline_params[\"aCount\"] = 100\nbaseline_params[\"aMax\"] = 8\nbaseline_params[\"aNestFac\"] = -1\n\nbaseline_params[\"bCount\"] = 100\nbaseline_params[\"bMax\"] = 14\nbaseline_params[\"bNestFac\"] = -1\n\nbaseline_params[\"cycles\"] = 1",
            "position": {
              "start": { "line": 12, "column": 0 },
              "end": { "line": 42, "column": 0 }
            },
            "key": "bd9IJQQ122"
          }
        ],
        "data": {},
        "key": "kTe85jSO9x"
      },
      {
        "type": "block",
        "position": {
          "start": { "line": 43, "column": 0 },
          "end": { "line": 44, "column": 0 }
        },
        "children": [
          {
            "type": "code",
            "lang": "python",
            "value": "agent = PensionContribConsumerType(**baseline_params)",
            "position": {
              "start": { "line": 45, "column": 0 },
              "end": { "line": 48, "column": 0 }
            },
            "key": "h8zDglNZq1"
          }
        ],
        "data": {
          "collapsed": false,
          "jupyter": { "outputs_hidden": false },
          "pycharm": { "name": "#%%\n" }
        },
        "key": "IwumFWFY7b"
      },
      {
        "type": "block",
        "position": {
          "start": { "line": 49, "column": 0 },
          "end": { "line": 50, "column": 0 }
        },
        "children": [
          {
            "type": "code",
            "lang": "python",
            "value": "def plot_3d_func(func, min, max, n=100):\n    # get_ipython().run_line_magic(\"matplotlib\", \"widget\")\n    xgrid = np.linspace(min, max, n)\n    ygrid = xgrid\n\n    xMat, yMat = np.meshgrid(xgrid, ygrid, indexing=\"ij\")\n\n    zMat = func(xMat, yMat)\n\n    ax = plt.axes(projection=\"3d\")\n    ax.plot_surface(xMat, yMat, zMat, cmap=\"viridis\")\n    ax.set_title(\"surface\")\n    ax.set_xlabel(\"m\")\n    ax.set_ylabel(\"n\")\n    ax.set_zlabel(\"f\")\n    plt.show()",
            "position": {
              "start": { "line": 51, "column": 0 },
              "end": { "line": 69, "column": 0 }
            },
            "key": "R0wAt4hGOC"
          }
        ],
        "data": {
          "collapsed": false,
          "jupyter": { "outputs_hidden": false },
          "pycharm": { "name": "#%%\n" }
        },
        "key": "DGjhz1YzUa"
      },
      {
        "type": "block",
        "position": {
          "start": { "line": 70, "column": 0 },
          "end": { "line": 71, "column": 0 }
        },
        "children": [
          {
            "type": "code",
            "lang": "python",
            "value": "agent.solve()\n\nT = 0",
            "position": {
              "start": { "line": 72, "column": 0 },
              "end": { "line": 77, "column": 0 }
            },
            "key": "fguIFojRYS"
          }
        ],
        "data": {
          "collapsed": false,
          "jupyter": { "outputs_hidden": false },
          "lines_to_next_cell": 2,
          "pycharm": { "name": "#%%\n" }
        },
        "key": "sqFo4JU6xg"
      },
      {
        "type": "block",
        "position": {
          "start": { "line": 78, "column": 0 },
          "end": { "line": 79, "column": 0 }
        },
        "children": [
          {
            "type": "heading",
            "depth": 2,
            "position": {
              "start": { "line": 80, "column": 0 },
              "end": { "line": 81, "column": 0 }
            },
            "children": [
              {
                "type": "text",
                "value": "Post Decision Stage",
                "key": "n2uDNZH9DQ"
              }
            ],
            "identifier": "post-decision-stage",
            "label": "Post Decision Stage",
            "html_id": "post-decision-stage",
            "implicit": true,
            "key": "O1SD2htPQs"
          }
        ],
        "data": {},
        "key": "wOJik557pK"
      },
      {
        "type": "block",
        "position": {
          "start": { "line": 83, "column": 0 },
          "end": { "line": 84, "column": 0 }
        },
        "children": [
          {
            "type": "code",
            "lang": "python",
            "value": "plot_3d_func(agent.solution[T].post_decision_stage.v_func.vFuncNvrs, 0, 5)",
            "position": {
              "start": { "line": 85, "column": 0 },
              "end": { "line": 88, "column": 0 }
            },
            "key": "j9QAXAI4rF"
          },
          {
            "type": "output",
            "id": "oqBGgu1dzg5C-VAzy9m4L",
            "data": [
              {
                "output_type": "display_data",
                "metadata": {},
                "data": {
                  "image/png": {
                    "content_type": "image/png",
                    "hash": "be2580cd18218edadf0bfda380e32ec3",
                    "path": "/_static/be2580cd18218edadf0bfda380e32ec3.png"
                  },
                  "text/plain": {
                    "content": "<Figure size 640x480 with 1 Axes>",
                    "content_type": "text/plain"
                  }
                }
              }
            ],
            "key": "EFPq1HNgxA"
          }
        ],
        "data": { "lines_to_next_cell": 2 },
        "key": "IqS5nzJl07"
      },
      {
        "type": "block",
        "position": {
          "start": { "line": 93, "column": 0 },
          "end": { "line": 94, "column": 0 }
        },
        "children": [
          {
            "type": "code",
            "lang": "python",
            "value": "plot_3d_func(agent.solution[T].post_decision_stage.dvda_func.cFunc, 0, 5)",
            "position": {
              "start": { "line": 95, "column": 0 },
              "end": { "line": 98, "column": 0 }
            },
            "key": "b9OboM5l7n"
          },
          {
            "type": "output",
            "id": "PxTENYOo_AhFIE5k34Xl_",
            "data": [
              {
                "output_type": "display_data",
                "metadata": {},
                "data": {
                  "image/png": {
                    "content_type": "image/png",
                    "hash": "743936feef1de27436418a8de2f7ede0",
                    "path": "/_static/743936feef1de27436418a8de2f7ede0.png"
                  },
                  "text/plain": {
                    "content": "<Figure size 640x480 with 1 Axes>",
                    "content_type": "text/plain"
                  }
                }
              }
            ],
            "key": "HsF9jC4nw5"
          }
        ],
        "data": {},
        "key": "uOPU4gxSCb"
      },
      {
        "type": "block",
        "position": {
          "start": { "line": 103, "column": 0 },
          "end": { "line": 104, "column": 0 }
        },
        "children": [
          {
            "type": "code",
            "lang": "python",
            "value": "plot_3d_func(agent.solution[T].post_decision_stage.dvdb_func.cFunc, 0, 5)",
            "position": {
              "start": { "line": 105, "column": 0 },
              "end": { "line": 108, "column": 0 }
            },
            "key": "NBy9DAumsM"
          },
          {
            "type": "output",
            "id": "a4lwLXJ8huZbEAFD0qbZW",
            "data": [
              {
                "output_type": "display_data",
                "metadata": {},
                "data": {
                  "image/png": {
                    "content_type": "image/png",
                    "hash": "2ef0043b6184ce9bca5764765651a8f7",
                    "path": "/_static/2ef0043b6184ce9bca5764765651a8f7.png"
                  },
                  "text/plain": {
                    "content": "<Figure size 640x480 with 1 Axes>",
                    "content_type": "text/plain"
                  }
                }
              }
            ],
            "key": "NjFe8WGkIk"
          }
        ],
        "data": {},
        "key": "cPmo06qRhF"
      },
      {
        "type": "block",
        "position": {
          "start": { "line": 113, "column": 0 },
          "end": { "line": 114, "column": 0 }
        },
        "children": [
          {
            "type": "heading",
            "depth": 2,
            "position": {
              "start": { "line": 115, "column": 0 },
              "end": { "line": 116, "column": 0 }
            },
            "children": [
              {
                "type": "text",
                "value": "Consumption Stage",
                "key": "m0AAtQM3Lw"
              }
            ],
            "identifier": "consumption-stage",
            "label": "Consumption Stage",
            "html_id": "consumption-stage",
            "implicit": true,
            "key": "MHzfEXNkZy"
          }
        ],
        "data": {},
        "key": "n7JibPa1yM"
      },
      {
        "type": "block",
        "position": {
          "start": { "line": 118, "column": 0 },
          "end": { "line": 119, "column": 0 }
        },
        "children": [
          {
            "type": "code",
            "lang": "python",
            "value": "plot_3d_func(agent.solution[T].consumption_stage.c_func, 0, 5)",
            "position": {
              "start": { "line": 120, "column": 0 },
              "end": { "line": 123, "column": 0 }
            },
            "key": "gCc9BRXii2"
          },
          {
            "type": "output",
            "id": "8RYPPiXdUKWdWotJb9-ca",
            "data": [
              {
                "output_type": "display_data",
                "metadata": {},
                "data": {
                  "image/png": {
                    "content_type": "image/png",
                    "hash": "9681ab3dd039095994b4d63d1892c65c",
                    "path": "/_static/9681ab3dd039095994b4d63d1892c65c.png"
                  },
                  "text/plain": {
                    "content": "<Figure size 640x480 with 1 Axes>",
                    "content_type": "text/plain"
                  }
                }
              }
            ],
            "key": "uzEyX3gTeP"
          }
        ],
        "data": {
          "collapsed": false,
          "jupyter": { "outputs_hidden": false },
          "lines_to_next_cell": 2,
          "pycharm": { "name": "#%%\n" }
        },
        "key": "Wjc4GRy842"
      },
      {
        "type": "block",
        "position": {
          "start": { "line": 128, "column": 0 },
          "end": { "line": 129, "column": 0 }
        },
        "children": [
          {
            "type": "code",
            "lang": "python",
            "value": "plot_3d_func(agent.solution[T].consumption_stage.v_func.vFuncNvrs, 0, 5)",
            "position": {
              "start": { "line": 130, "column": 0 },
              "end": { "line": 133, "column": 0 }
            },
            "key": "TVuuOC5oLc"
          },
          {
            "type": "output",
            "id": "ch3E22JoDYWb8xSOL8no1",
            "data": [
              {
                "output_type": "display_data",
                "metadata": {},
                "data": {
                  "image/png": {
                    "content_type": "image/png",
                    "hash": "c72c3a18d8f0b083d2a86012ca0f78cc",
                    "path": "/_static/c72c3a18d8f0b083d2a86012ca0f78cc.png"
                  },
                  "text/plain": {
                    "content": "<Figure size 640x480 with 1 Axes>",
                    "content_type": "text/plain"
                  }
                }
              }
            ],
            "key": "wEWmxFwyjA"
          }
        ],
        "data": {},
        "key": "uKMK9FtWLY"
      },
      {
        "type": "block",
        "position": {
          "start": { "line": 138, "column": 0 },
          "end": { "line": 139, "column": 0 }
        },
        "children": [
          {
            "type": "code",
            "lang": "python",
            "value": "plot_3d_func(agent.solution[T].consumption_stage.dvdl_func.cFunc, 0, 5)",
            "position": {
              "start": { "line": 140, "column": 0 },
              "end": { "line": 143, "column": 0 }
            },
            "key": "mHLnJ5LCc2"
          },
          {
            "type": "output",
            "id": "AzfYUI0M8Ngiab7DLgRwG",
            "data": [
              {
                "output_type": "display_data",
                "metadata": {},
                "data": {
                  "image/png": {
                    "content_type": "image/png",
                    "hash": "9681ab3dd039095994b4d63d1892c65c",
                    "path": "/_static/9681ab3dd039095994b4d63d1892c65c.png"
                  },
                  "text/plain": {
                    "content": "<Figure size 640x480 with 1 Axes>",
                    "content_type": "text/plain"
                  }
                }
              }
            ],
            "key": "J28v30x8fY"
          }
        ],
        "data": {},
        "key": "GbMiS8052V"
      },
      {
        "type": "block",
        "position": {
          "start": { "line": 148, "column": 0 },
          "end": { "line": 149, "column": 0 }
        },
        "children": [
          {
            "type": "code",
            "lang": "python",
            "value": "plot_3d_func(agent.solution[T].consumption_stage.dvdb_func.cFunc, 0, 5)",
            "position": {
              "start": { "line": 150, "column": 0 },
              "end": { "line": 153, "column": 0 }
            },
            "key": "OyJuWPyzgH"
          },
          {
            "type": "output",
            "id": "O95xpwc1nM8wLpDi47QwL",
            "data": [
              {
                "output_type": "display_data",
                "metadata": {},
                "data": {
                  "image/png": {
                    "content_type": "image/png",
                    "hash": "17efe78940a696e9b425dd500f600395",
                    "path": "/_static/17efe78940a696e9b425dd500f600395.png"
                  },
                  "text/plain": {
                    "content": "<Figure size 640x480 with 1 Axes>",
                    "content_type": "text/plain"
                  }
                }
              }
            ],
            "key": "HLAOLb3UsZ"
          }
        ],
        "data": {},
        "key": "NZnOpGKh5F"
      },
      {
        "type": "block",
        "position": {
          "start": { "line": 158, "column": 0 },
          "end": { "line": 159, "column": 0 }
        },
        "children": [
          {
            "type": "heading",
            "depth": 2,
            "position": {
              "start": { "line": 160, "column": 0 },
              "end": { "line": 161, "column": 0 }
            },
            "children": [
              { "type": "text", "value": "Deposit Stage", "key": "oxEJQrfUvA" }
            ],
            "identifier": "deposit-stage",
            "label": "Deposit Stage",
            "html_id": "deposit-stage",
            "implicit": true,
            "key": "A8tv7iUXXG"
          }
        ],
        "data": {},
        "key": "pxxqsBJGO8"
      },
      {
        "type": "block",
        "position": {
          "start": { "line": 163, "column": 0 },
          "end": { "line": 164, "column": 0 }
        },
        "children": [
          {
            "type": "code",
            "lang": "python",
            "value": "plot_3d_func(agent.solution[T].deposit_stage.d_func, 0, 5)",
            "position": {
              "start": { "line": 165, "column": 0 },
              "end": { "line": 168, "column": 0 }
            },
            "key": "q2RDOXGori"
          },
          {
            "type": "output",
            "id": "A_Zkn3MKe2u6bxP9yIKfW",
            "data": [
              {
                "output_type": "display_data",
                "metadata": {},
                "data": {
                  "image/png": {
                    "content_type": "image/png",
                    "hash": "2233e86c578dfeefc9c3802a484d7189",
                    "path": "/_static/2233e86c578dfeefc9c3802a484d7189.png"
                  },
                  "text/plain": {
                    "content": "<Figure size 640x480 with 1 Axes>",
                    "content_type": "text/plain"
                  }
                }
              }
            ],
            "key": "ZXyYCK9AOo"
          }
        ],
        "data": { "lines_to_next_cell": 2 },
        "key": "lzJT1CCbDD"
      },
      {
        "type": "block",
        "position": {
          "start": { "line": 173, "column": 0 },
          "end": { "line": 174, "column": 0 }
        },
        "children": [
          {
            "type": "code",
            "lang": "python",
            "value": "plot_3d_func(agent.solution[T].deposit_stage.c_func, 0, 5)",
            "position": {
              "start": { "line": 175, "column": 0 },
              "end": { "line": 178, "column": 0 }
            },
            "key": "jrZWYd5KrE"
          },
          {
            "type": "output",
            "id": "adJQMPnoX9ZZ0NoEd6WNY",
            "data": [
              {
                "output_type": "display_data",
                "metadata": {},
                "data": {
                  "image/png": {
                    "content_type": "image/png",
                    "hash": "fa56a37ec17bf38ace3d3d89e2d5cd40",
                    "path": "/_static/fa56a37ec17bf38ace3d3d89e2d5cd40.png"
                  },
                  "text/plain": {
                    "content": "<Figure size 640x480 with 1 Axes>",
                    "content_type": "text/plain"
                  }
                }
              }
            ],
            "key": "op6b3OjmYj"
          }
        ],
        "data": {
          "collapsed": false,
          "jupyter": { "outputs_hidden": false },
          "lines_to_next_cell": 2,
          "pycharm": { "name": "#%%\n" }
        },
        "key": "i4w83cDXts"
      },
      {
        "type": "block",
        "position": {
          "start": { "line": 183, "column": 0 },
          "end": { "line": 184, "column": 0 }
        },
        "children": [
          {
            "type": "code",
            "lang": "python",
            "value": "plot_3d_func(agent.solution[T].deposit_stage.v_func.vFuncNvrs, 0, 5)",
            "position": {
              "start": { "line": 185, "column": 0 },
              "end": { "line": 188, "column": 0 }
            },
            "key": "RLdcFW7RMl"
          },
          {
            "type": "output",
            "id": "7XfpLCgp6FVSxClhpUPg4",
            "data": [
              {
                "output_type": "display_data",
                "metadata": {},
                "data": {
                  "image/png": {
                    "content_type": "image/png",
                    "hash": "13b3906b217a739ac81c4fe5f73e30b0",
                    "path": "/_static/13b3906b217a739ac81c4fe5f73e30b0.png"
                  },
                  "text/plain": {
                    "content": "<Figure size 640x480 with 1 Axes>",
                    "content_type": "text/plain"
                  }
                }
              }
            ],
            "key": "qoGxKo0aaS"
          }
        ],
        "data": {},
        "key": "UZnLnTIOqz"
      },
      {
        "type": "block",
        "position": {
          "start": { "line": 193, "column": 0 },
          "end": { "line": 194, "column": 0 }
        },
        "children": [
          {
            "type": "code",
            "lang": "python",
            "value": "plot_3d_func(agent.solution[T].deposit_stage.dvdm_func.cFunc, 0, 5)",
            "position": {
              "start": { "line": 195, "column": 0 },
              "end": { "line": 198, "column": 0 }
            },
            "key": "xkQ9POQ0f8"
          },
          {
            "type": "output",
            "id": "LXf8fwApbnNuXi8yzfhAp",
            "data": [
              {
                "output_type": "display_data",
                "metadata": {},
                "data": {
                  "image/png": {
                    "content_type": "image/png",
                    "hash": "fa56a37ec17bf38ace3d3d89e2d5cd40",
                    "path": "/_static/fa56a37ec17bf38ace3d3d89e2d5cd40.png"
                  },
                  "text/plain": {
                    "content": "<Figure size 640x480 with 1 Axes>",
                    "content_type": "text/plain"
                  }
                }
              }
            ],
            "key": "phf0J9tCHH"
          }
        ],
        "data": { "lines_to_next_cell": 2 },
        "key": "nT7DP0IaHe"
      },
      {
        "type": "block",
        "position": {
          "start": { "line": 203, "column": 0 },
          "end": { "line": 204, "column": 0 }
        },
        "children": [
          {
            "type": "code",
            "lang": "python",
            "value": "plot_3d_func(agent.solution[T].deposit_stage.dvdn_func.cFunc, 0, 5)",
            "position": {
              "start": { "line": 205, "column": 0 },
              "end": { "line": 208, "column": 0 }
            },
            "key": "ekhUmreXgB"
          },
          {
            "type": "output",
            "id": "X6LFxQj9dg6-xZGzVLOSO",
            "data": [
              {
                "output_type": "display_data",
                "metadata": {},
                "data": {
                  "image/png": {
                    "content_type": "image/png",
                    "hash": "8d5809ede35d7987ae4fbde5c0fe34af",
                    "path": "/_static/8d5809ede35d7987ae4fbde5c0fe34af.png"
                  },
                  "text/plain": {
                    "content": "<Figure size 640x480 with 1 Axes>",
                    "content_type": "text/plain"
                  }
                }
              }
            ],
            "key": "ua9HNEC8sR"
          }
        ],
        "data": {
          "collapsed": false,
          "jupyter": { "outputs_hidden": false },
          "lines_to_next_cell": 2,
          "pycharm": { "name": "#%%\n" }
        },
        "key": "Z5M66WZM78"
      },
      {
        "type": "block",
        "position": {
          "start": { "line": 213, "column": 0 },
          "end": { "line": 214, "column": 0 }
        },
        "children": [
          {
            "type": "code",
            "lang": "python",
            "value": "%time\nplot_3d_func(agent.solution[T].deposit_stage.gaussian_interp, 0, 5)",
            "position": {
              "start": { "line": 215, "column": 0 },
              "end": { "line": 219, "column": 0 }
            },
            "key": "PaXTa641DJ"
          },
          {
            "type": "output",
            "id": "acC1FnM4k09BNxzDyxiKc",
            "data": [
              {
                "name": "stdout",
                "output_type": "stream",
                "text": "CPU times: total: 0 ns\nWall time: 0 ns\n"
              },
              {
                "output_type": "display_data",
                "metadata": {},
                "data": {
                  "image/png": {
                    "content_type": "image/png",
                    "hash": "086495cbebc22de99fc1adf46754c578",
                    "path": "/_static/086495cbebc22de99fc1adf46754c578.png"
                  },
                  "text/plain": {
                    "content": "<Figure size 640x480 with 1 Axes>",
                    "content_type": "text/plain"
                  }
                }
              }
            ],
            "key": "jitoH0NPOn"
          }
        ],
        "data": {
          "collapsed": false,
          "jupyter": { "outputs_hidden": false },
          "lines_to_next_cell": 2,
          "pycharm": { "name": "#%%\n" }
        },
        "key": "MGqgAe4nyM"
      },
      {
        "type": "block",
        "position": {
          "start": { "line": 224, "column": 0 },
          "end": { "line": 225, "column": 0 }
        },
        "children": [
          {
            "type": "heading",
            "depth": 2,
            "position": {
              "start": { "line": 226, "column": 0 },
              "end": { "line": 227, "column": 0 }
            },
            "children": [
              { "type": "text", "value": "Grids", "key": "VvKCDQ2tsc" }
            ],
            "identifier": "grids",
            "label": "Grids",
            "html_id": "grids",
            "implicit": true,
            "key": "msz7OK541D"
          }
        ],
        "data": { "lines_to_next_cell": 2 },
        "key": "hc4xzdGI9d"
      },
      {
        "type": "block",
        "position": {
          "start": { "line": 229, "column": 0 },
          "end": { "line": 230, "column": 0 }
        },
        "children": [
          {
            "type": "code",
            "lang": "python",
            "value": "grids = agent.solution[T].consumption_stage.grids_before_cleanup",
            "position": {
              "start": { "line": 231, "column": 0 },
              "end": { "line": 234, "column": 0 }
            },
            "key": "Rnmo6TUYh6"
          }
        ],
        "data": {},
        "key": "zAUsyfI4Ns"
      },
      {
        "type": "block",
        "position": {
          "start": { "line": 235, "column": 0 },
          "end": { "line": 236, "column": 0 }
        },
        "children": [
          {
            "type": "code",
            "lang": "python",
            "value": "def scatter_hist(x, y, color, ax, ax_histx, ax_histy):\n    # no labels\n    ax_histx.tick_params(axis=\"x\", labelbottom=False)\n    ax_histy.tick_params(axis=\"y\", labelleft=False)\n\n    # the scatter plot:\n    hist = ax.scatter(x, y, c=color, cmap=\"viridis\", alpha=0.6, s=5)\n\n    # now determine nice limits by hand:\n    binwidth = 1\n    xymax = max(np.max(x), np.max(y))\n    xymin = min(np.min(x), np.min(y))\n    top = (int(xymax / binwidth) + 1) * binwidth\n    bottom = (int(xymin / binwidth) + 1) * binwidth\n\n    bins = np.arange(bottom, top + binwidth, binwidth)\n    ax_histx.hist(x, bins=bins)\n    ax_histy.hist(y, bins=bins, orientation=\"horizontal\")\n\n    return hist",
            "position": {
              "start": { "line": 237, "column": 0 },
              "end": { "line": 259, "column": 0 }
            },
            "key": "rpwZWsHwMb"
          }
        ],
        "data": {
          "collapsed": false,
          "jupyter": { "outputs_hidden": false },
          "pycharm": { "name": "#%%\n" }
        },
        "key": "LkrMauhUcn"
      },
      {
        "type": "block",
        "position": {
          "start": { "line": 260, "column": 0 },
          "end": { "line": 261, "column": 0 }
        },
        "children": [
          {
            "type": "code",
            "lang": "python",
            "value": "def plot_scatter_hist(x, y, color, title, xlabel, ylabel, filename):\n    # Create a Figure, which doesn't have to be square.\n    fig = plt.figure(figsize=(6, 6), constrained_layout=True)\n    # Create the main axes, leaving 25% of the figure space at the top and on the\n    # right to position marginals.\n    ax = fig.add_gridspec(top=0.75, right=0.75).subplots()\n    # The main axes' aspect can be fixed.\n    ax.set(aspect=1)\n    # Create marginal axes, which have 25% of the size of the main axes.  Note that\n    # the inset axes are positioned *outside* (on the right and the top) of the\n    # main axes, by specifying axes coordinates greater than 1.  Axes coordinates\n    # less than 0 would likewise specify positions on the left and the bottom of\n    # the main axes.\n    ax_histx = ax.inset_axes([0, 1.05, 1, 0.25], sharex=ax)\n    ax_histy = ax.inset_axes([1.05, 0, 0.25, 1], sharey=ax)\n\n    # remove non-finite values\n    idx = np.logical_and.reduce([np.isfinite(x), np.isfinite(y), np.isfinite(color)])\n    idx = np.logical_and.reduce([idx, x > 0, y > 0])\n\n    x = x[idx]\n    y = y[idx]\n    color = color[idx]\n\n    # Draw the scatter plot and marginals.\n    hist = scatter_hist(x, y, color, ax, ax_histx, ax_histy)\n    cbar = fig.colorbar(hist)\n    cbar.ax.set_ylabel(\"Pension Deposits $d$\")\n\n    fig.suptitle(title, fontsize=14)\n    ax.set_xlabel(xlabel)\n    ax.set_ylabel(ylabel)\n\n    plt.show()\n    fig.savefig(figures_path + filename)",
            "position": {
              "start": { "line": 262, "column": 0 },
              "end": { "line": 299, "column": 0 }
            },
            "key": "eY7uT0NHhU"
          }
        ],
        "data": {},
        "key": "YNHf9iHxsS"
      },
      {
        "type": "block",
        "position": {
          "start": { "line": 300, "column": 0 },
          "end": { "line": 301, "column": 0 }
        },
        "children": [
          {
            "type": "code",
            "lang": "python",
            "value": "plot_scatter_hist(\n    grids[\"lMat\"],\n    grids[\"b2Mat\"],\n    grids[\"dMat\"],\n    \"Pension Deposit on Exogenous Grid\",\n    r\"Market Resources $\\ell$\",\n    \"Retirement balance $b$\",\n    \"ExogenousGrid.pdf\",\n)",
            "position": {
              "start": { "line": 302, "column": 0 },
              "end": { "line": 313, "column": 0 }
            },
            "key": "cxUH3D6Vgs"
          },
          {
            "type": "output",
            "id": "hBAAVYOojvoseWwkdO8Lr",
            "data": [
              {
                "output_type": "display_data",
                "metadata": {},
                "data": {
                  "image/png": {
                    "content_type": "image/png",
                    "hash": "6d0a48617b08c63da3b33bbab909e570",
                    "path": "/_static/6d0a48617b08c63da3b33bbab909e570.png"
                  },
                  "text/plain": {
                    "content": "<Figure size 600x600 with 2 Axes>",
                    "content_type": "text/plain"
                  }
                }
              }
            ],
            "key": "iSHSTvNZz9"
          }
        ],
        "data": {},
        "key": "yGW7HPkrFz"
      },
      {
        "type": "block",
        "position": {
          "start": { "line": 318, "column": 0 },
          "end": { "line": 319, "column": 0 }
        },
        "children": [
          {
            "type": "code",
            "lang": "python",
            "value": "plot_scatter_hist(\n    grids[\"mMat\"],\n    grids[\"nMat\"],\n    grids[\"dMat\"],\n    \"Pension Deposit on Endogenous Grid\",\n    \"Market Resources $m$\",\n    \"Retirement balance $n$\",\n    \"EndogenousGrid.pdf\",\n)",
            "position": {
              "start": { "line": 320, "column": 0 },
              "end": { "line": 331, "column": 0 }
            },
            "key": "PoAh23T6Tx"
          },
          {
            "type": "output",
            "id": "JJSvgdtR8dkQ7bF89qGSG",
            "data": [
              {
                "output_type": "display_data",
                "metadata": {},
                "data": {
                  "image/png": {
                    "content_type": "image/png",
                    "hash": "f19e7e94de1d6ce6fcff24123446d3a9",
                    "path": "/_static/f19e7e94de1d6ce6fcff24123446d3a9.png"
                  },
                  "text/plain": {
                    "content": "<Figure size 600x600 with 2 Axes>",
                    "content_type": "text/plain"
                  }
                }
              }
            ],
            "key": "W4rYib1mvo"
          }
        ],
        "data": {},
        "key": "xobgZg85Y4"
      },
      {
        "type": "block",
        "position": {
          "start": { "line": 336, "column": 0 },
          "end": { "line": 337, "column": 0 }
        },
        "children": [
          {
            "type": "code",
            "lang": "python",
            "value": "# definitions for the axes\nleft, width = 0.1, 0.65\nbottom, height = 0.1, 0.65\nspacing = 0.005\n\nrect_scatter = [left, bottom, width, height]\nrect_histx = [left, bottom + height + spacing, width, 0.2]\nrect_histy = [left + width + spacing, bottom, 0.2, height]\n\n# start with a square Figure\nfig = plt.figure(figsize=(8, 8))\n\nax = fig.add_axes(rect_scatter)\nax_histx = fig.add_axes(rect_histx, sharex=ax)\nax_histy = fig.add_axes(rect_histy, sharey=ax)\n\nx = agent.solution[T].deposit_stage.gaussian_interp.grids[0]\ny = agent.solution[T].deposit_stage.gaussian_interp.grids[1]\ncolor = agent.solution[T].deposit_stage.gaussian_interp.values\n\nidx = np.logical_or(x < 0, y < 0)\n\nx = x[~idx]\ny = y[~idx]\ncolor = color[~idx]\n\n# use the previously defined function\nhist = scatter_hist(x, y, color, ax, ax_histx, ax_histy)\ncbar = fig.colorbar(hist)\ncbar.ax.set_ylabel(\"Pension Deposits $d$\")\n\nfig.suptitle(\"Pension Deposit on Endogenous Grid\", fontsize=16)\nax.set_xlabel(\"Market Resources $m$\")\nax.set_ylabel(\"Retirement Savings $n$\")\nplt.show()\n# fig.savefig(figures_path + \"EndogenousGrid.pdf\")",
            "position": {
              "start": { "line": 338, "column": 0 },
              "end": { "line": 376, "column": 0 }
            },
            "key": "unzs3JCxVw"
          },
          {
            "type": "output",
            "id": "Tdwcv_xKXYTTbTNof87o9",
            "data": [
              {
                "output_type": "display_data",
                "metadata": {},
                "data": {
                  "image/png": {
                    "content_type": "image/png",
                    "hash": "711555f35224bd6a5dcd78d6cd132fa4",
                    "path": "/_static/711555f35224bd6a5dcd78d6cd132fa4.png"
                  },
                  "text/plain": {
                    "content": "<Figure size 800x800 with 4 Axes>",
                    "content_type": "text/plain"
                  }
                }
              }
            ],
            "key": "xf05dVDUai"
          }
        ],
        "data": {
          "collapsed": false,
          "jupyter": { "outputs_hidden": false },
          "pycharm": { "name": "#%%\n" }
        },
        "key": "uhVSTCE8Ev"
      },
      {
        "type": "block",
        "position": {
          "start": { "line": 381, "column": 0 },
          "end": { "line": 382, "column": 0 }
        },
        "children": [
          {
            "type": "code",
            "lang": "python",
            "value": "fig, ax = plt.subplots()\nplot = ax.scatter(\n    grids[\"mMat\"],\n    grids[\"nMat\"],\n    c=grids[\"dMat\"],\n    cmap=\"viridis\",\n    vmin=-1,\n    vmax=5,\n    plotnonfinite=True,\n    alpha=0.6,\n    s=5,\n)\ncbar = fig.colorbar(plot)\ncbar.ax.set_ylabel(\"Pension Deposits $d$\")\n\n\nplt.xlim([-1, 10])\nplt.ylim([-1, 10])",
            "position": {
              "start": { "line": 383, "column": 0 },
              "end": { "line": 403, "column": 0 }
            },
            "key": "nX3cm6YtG6"
          },
          {
            "type": "output",
            "id": "x2jubBw5dE3Dp5iRnhAKL",
            "data": [
              {
                "output_type": "execute_result",
                "execution_count": 25,
                "metadata": {},
                "data": {
                  "text/plain": {
                    "content": "(-1.0, 10.0)",
                    "content_type": "text/plain"
                  }
                }
              },
              {
                "output_type": "display_data",
                "metadata": {},
                "data": {
                  "image/png": {
                    "content_type": "image/png",
                    "hash": "5d21768c8192bb14a9f833343a6efaf9",
                    "path": "/_static/5d21768c8192bb14a9f833343a6efaf9.png"
                  },
                  "text/plain": {
                    "content": "<Figure size 640x480 with 2 Axes>",
                    "content_type": "text/plain"
                  }
                }
              }
            ],
            "key": "f655Ab9aCx"
          }
        ],
        "data": { "lines_to_next_cell": 2 },
        "key": "Y2DAzxduqr"
      },
      {
        "type": "block",
        "position": {
          "start": { "line": 408, "column": 0 },
          "end": { "line": 409, "column": 0 }
        },
        "children": [
          {
            "type": "code",
            "lang": "python",
            "value": "fig, ax = plt.subplots()\nscatter = ax.scatter(\n    grids[\"lMat\"],\n    grids[\"b2Mat\"],\n    # c=np.maximum(grids[\"dMat\"], 0),\n    # cmap=\"viridis\",\n    vmin=-2,\n    vmax=15,\n    plotnonfinite=True,\n    alpha=0.6,\n    s=5,\n)\n# cbar = fig.colorbar(scatter)\n# cbar.ax.set_ylabel(\"Pension Deposits $d$\")\n\nplt.title(\"Pension Deposits on Exogenous Post-Decision Grid\")\nplt.xlabel(r\"Liquid Wealth $\\ell$\")\nplt.ylabel(\"Retirement Balance $b$\")\nfig.savefig(figures_path + \"ExogenousGrid.pdf\")",
            "position": {
              "start": { "line": 410, "column": 0 },
              "end": { "line": 431, "column": 0 }
            },
            "key": "LRuqaPU6v1"
          },
          {
            "type": "output",
            "id": "ijIEPAY5tLu1bNXUQx0UC",
            "data": [
              {
                "name": "stderr",
                "output_type": "stream",
                "text": "C:\\Users\\alujan\\AppData\\Local\\Temp\\ipykernel_35916\\29046517.py:2: UserWarning: No data for colormapping provided via 'c'. Parameters 'vmin', 'vmax' will be ignored\n  scatter = ax.scatter(\n"
              },
              {
                "output_type": "display_data",
                "metadata": {},
                "data": {
                  "image/png": {
                    "content_type": "image/png",
                    "hash": "b146a888b992d76c6897decef27442c8",
                    "path": "/_static/b146a888b992d76c6897decef27442c8.png"
                  },
                  "text/plain": {
                    "content": "<Figure size 640x480 with 1 Axes>",
                    "content_type": "text/plain"
                  }
                }
              }
            ],
            "key": "bKaIYqiNMO"
          }
        ],
        "data": { "lines_to_next_cell": 2 },
        "key": "xjRH3bqJfC"
      },
      {
        "type": "block",
        "position": {
          "start": { "line": 436, "column": 0 },
          "end": { "line": 437, "column": 0 }
        },
        "children": [
          {
            "type": "code",
            "lang": "python",
            "value": "grids = agent.solution[T].consumption_stage.grids_before_cleanup",
            "position": {
              "start": { "line": 438, "column": 0 },
              "end": { "line": 441, "column": 0 }
            },
            "key": "EL9tzpwtPS"
          }
        ],
        "data": {},
        "key": "s0byzhajhw"
      },
      {
        "type": "block",
        "position": {
          "start": { "line": 442, "column": 0 },
          "end": { "line": 443, "column": 0 }
        },
        "children": [
          {
            "type": "code",
            "lang": "python",
            "value": "from HARK.interpolation._sklearn import GeneralizedRegressionUnstructuredInterp",
            "position": {
              "start": { "line": 444, "column": 0 },
              "end": { "line": 447, "column": 0 }
            },
            "key": "HqwHmbzHxo"
          }
        ],
        "data": {},
        "key": "LH3IjHQtLB"
      },
      {
        "type": "block",
        "position": {
          "start": { "line": 448, "column": 0 },
          "end": { "line": 449, "column": 0 }
        },
        "children": [
          {
            "type": "code",
            "lang": "python",
            "value": "gauss_interp = GeneralizedRegressionUnstructuredInterp(\n    grids[\"dMat\"],\n    [grids[\"mMat\"], grids[\"nMat\"]],\n    model=\"gaussian-process\",\n    std=True,\n    model_kwargs={\"normalize_y\": True},\n)",
            "position": {
              "start": { "line": 450, "column": 0 },
              "end": { "line": 459, "column": 0 }
            },
            "key": "Za0aWpABU1"
          }
        ],
        "data": { "lines_to_next_cell": 2 },
        "key": "b1EWlMECK9"
      },
      {
        "type": "block",
        "position": {
          "start": { "line": 460, "column": 0 },
          "end": { "line": 461, "column": 0 }
        },
        "children": [
          {
            "type": "code",
            "lang": "python",
            "value": "# get_ipython().run_line_magic(\"matplotlib\", \"widget\")\nplot_3d_func(gauss_interp, 0, 5)",
            "position": {
              "start": { "line": 462, "column": 0 },
              "end": { "line": 466, "column": 0 }
            },
            "key": "mXuRH92gY6"
          },
          {
            "type": "output",
            "id": "Be3feUbr_tnHyn3v4Sn1G",
            "data": [
              {
                "output_type": "display_data",
                "metadata": {},
                "data": {
                  "image/png": {
                    "content_type": "image/png",
                    "hash": "086495cbebc22de99fc1adf46754c578",
                    "path": "/_static/086495cbebc22de99fc1adf46754c578.png"
                  },
                  "text/plain": {
                    "content": "<Figure size 640x480 with 1 Axes>",
                    "content_type": "text/plain"
                  }
                }
              }
            ],
            "key": "HeecAQEyJe"
          }
        ],
        "data": { "lines_to_next_cell": 2 },
        "key": "YEOC0ENNrM"
      },
      {
        "type": "block",
        "position": {
          "start": { "line": 471, "column": 0 },
          "end": { "line": 472, "column": 0 }
        },
        "children": [
          {
            "type": "code",
            "lang": "python",
            "value": "# consumption_stage = agent.solution[T].consumption_stage\n# dvdl_func_next = consumption_stage.dvdl_func\n# dvdb_func_next = consumption_stage.dvdb_func\n# c_func_next = consumption_stage.c_func\n# v_func_next = consumption_stage.v_func\n\n# dvdl_innr = dvdl_func_next(agent.lMat, agent.b2Mat)\n# dvdb_innr = dvdb_func_next(agent.lMat, agent.b2Mat)\n\n\n# def gp_inv(x):\n#     return agent.TaxDeduct / x - 1\n\n\n# # endogenous grid method, again\n# dMat = gp_inv(dvdl_innr / dvdb_innr - 1.0)",
            "position": {
              "start": { "line": 473, "column": 0 },
              "end": { "line": 491, "column": 0 }
            },
            "key": "bp4rWPsxfX"
          }
        ],
        "data": {},
        "key": "ZLiS2qupWg"
      },
      {
        "type": "block",
        "position": {
          "start": { "line": 492, "column": 0 },
          "end": { "line": 493, "column": 0 }
        },
        "children": [
          {
            "type": "code",
            "lang": "python",
            "value": "# dvdl_func_next(0.0, 0.0)",
            "position": {
              "start": { "line": 494, "column": 0 },
              "end": { "line": 497, "column": 0 }
            },
            "key": "nnWpr61tVN"
          }
        ],
        "data": {},
        "key": "i0y0CxJV58"
      },
      {
        "type": "block",
        "position": {
          "start": { "line": 498, "column": 0 },
          "end": { "line": 499, "column": 0 }
        },
        "children": [
          {
            "type": "code",
            "lang": "python",
            "value": "# def adaptive_func(lb):\n#     l, b = lb\n\n#     dvdl_innr = dvdl_func_next(float(l), float(b))\n#     dvdb_innr = dvdb_func_next(float(l), float(b))\n\n#     return dvdl_innr / dvdb_innr\n\n\n# import warnings",
            "position": {
              "start": { "line": 500, "column": 0 },
              "end": { "line": 512, "column": 0 }
            },
            "key": "kXYWx5uDyo"
          }
        ],
        "data": {},
        "key": "B5bEamTOeo"
      },
      {
        "type": "block",
        "position": {
          "start": { "line": 513, "column": 0 },
          "end": { "line": 514, "column": 0 }
        },
        "children": [
          {
            "type": "code",
            "lang": "python",
            "value": "# from adaptive import Learner2D, Runner, notebook_extension\n\n# warnings.filterwarnings(\"ignore\")\n\n# import logging\n\n# from adaptive.learner.Learner2D import minimize_triangle_surface_loss\n\n# logging.getLogger(\"param.main\").setLevel(logging.CRITICAL)\n\n# # import distributed\n\n# # client = distributed.Client()\n\n\n# notebook_extension()\n\n# loss = minimize_triangle_surface_loss\n\n# learner = Learner2D(adaptive_func, bounds=[(0, 10), (0, 10)], loss_per_triangle=loss)\n\n\n# runner = Runner(learner, loss_goal=0.001)  # start calculation on all CPU cores\n# runner.live_info()  # shows a widget with status information\n# runner.live_plot(update_interval=0.1)",
            "position": {
              "start": { "line": 515, "column": 0 },
              "end": { "line": 542, "column": 0 }
            },
            "key": "fiyE2hIJiH"
          }
        ],
        "data": {},
        "key": "Gk5Vt7q4tf"
      },
      {
        "type": "block",
        "position": {
          "start": { "line": 543, "column": 0 },
          "end": { "line": 544, "column": 0 }
        },
        "children": [
          {
            "type": "code",
            "lang": "python",
            "value": "# def plot(learner):\n#     plot = learner.plot(tri_alpha=0.2)\n#     return (plot.Image + plot.EdgePaths.I + plot).cols(2)\n\n\n# runner.live_plot(plotter=plot, update_interval=0.1)",
            "position": {
              "start": { "line": 545, "column": 0 },
              "end": { "line": 553, "column": 0 }
            },
            "key": "iQNdCxjcIs"
          }
        ],
        "data": {},
        "key": "NYXU5749fs"
      }
    ],
    "key": "sMOuPIdOmD"
  },
  "references": { "cite": { "order": [], "data": {} } }
}
